[{"C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\index.js":"1","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\MovieDataContext.js":"2","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\App.js":"3","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\components\\Header.js":"4","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\components\\TinderCards.js":"5","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\data\\index.js":"6"},{"size":425,"mtime":1678803142547,"results":"7","hashOfConfig":"8"},{"size":1134,"mtime":1678812516293,"results":"9","hashOfConfig":"8"},{"size":482,"mtime":1678803142538,"results":"10","hashOfConfig":"8"},{"size":653,"mtime":1678803142541,"results":"11","hashOfConfig":"8"},{"size":8239,"mtime":1678812585099,"results":"12","hashOfConfig":"8"},{"size":2800,"mtime":1678803142551,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dzmsjr",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\index.js",[],[],"C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\MovieDataContext.js",["34","35","36"],[],"import React, { useState, useEffect, createContext, useMemo, createRef } from \"react\";\r\nimport { recommendations } from \"./data\";\r\nconst MoviesData = createContext()\r\n\r\nexport const MovieDataContext = ({children}) => {\r\n  const [database, setDatabase] = useState(recommendations);\r\n \r\n\r\n  // UNCOMMENT IF SERVER IS RUNNING\r\n  // const [isReady, setIsReady] = useState(false)\r\n  \r\n//   async function getData() {\r\n//     return fetch(\"http://localhost:8080/recommendations\").then((response) =>\r\n//       response.json()\r\n//     );\r\n//   }\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const movieData = await getData();\r\n//       setDatabase(movieData.data);\r\n//       setIsReady(true)\r\n//     };\r\n//     fetchData();\r\n \r\n// },[isReady]);\r\n\r\n\r\n\r\n// if(isReady){\r\n//     return (\r\n//         <MoviesData.Provider value={{database, setDatabase}}>\r\n//             {children}\r\n//         </MoviesData.Provider> \r\n//       )\r\n// }\r\nreturn (\r\n          <MoviesData.Provider value={{database, setDatabase}}>\r\n              {children}\r\n          </MoviesData.Provider> \r\n        )\r\n}\r\n\r\nexport default MoviesData;\r\n","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\App.js",[],[],"C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\components\\Header.js",[],[],"C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\components\\TinderCards.js",["37","38","39","40"],[],"import React, { useContext, useState, useRef, useMemo, useEffect } from \"react\";\r\nimport MoviesData from \"../MovieDataContext\";\r\nimport \"./TinderCard.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Close, Check, SentimentVerySatisfied, Info } from \"@material-ui/icons\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\nasync function acceptMovie(movie) {\r\n  return fetch(`http://localhost:8080/recommendations/${movie.id}/accept`, {\r\n    method: \"PUT\",\r\n  }).then((response) => response.json());\r\n}\r\nasync function rejectMovie(movie) {\r\n  return fetch(`http://localhost:8080/recommendations/${movie.id}/reject`, {\r\n    method: \"PUT\",\r\n  }).then((response) => response.json());\r\n}\r\nfunction TinderCards() {\r\n  const desktopMedia = useMediaQuery(\"(min-width:600px\");\r\n  const [showSummary, setShowSummary] = useState(false);\r\n  const [showButtons, setShowButtons] = useState(true);\r\n  const { database } = useContext(MoviesData);\r\n  const [currentIndex, setCurrentIndex] = useState(database.length - 1);\r\n  // used for outOfFrame closure\r\n  const currentIndexRef = useRef(currentIndex);\r\n  const handleShowSumm = (e) => {\r\n    e.preventDefault();\r\n    console.log(showSummary);\r\n    setShowSummary(!showSummary);\r\n  };\r\n  const childRefs = useMemo(\r\n    () =>\r\n      Array(database.length)\r\n        .fill(0)\r\n        .map((i) => React.createRef()),\r\n    []\r\n  );\r\n\r\n  const updateCurrentIndex = (val) => {\r\n    setCurrentIndex(val);\r\n    currentIndexRef.current = val;\r\n  };\r\n\r\n  const canSwipe = currentIndex >= 0;\r\n\r\n  // Swipe left -> accept , Swipe right -> Reject\r\n  // const swiped = (direction, index, movie) => {\r\n  //   setShowSummary(false)\r\n  //   if (direction === \"left\") {\r\n  //     acceptMovie(movie);\r\n  //   }\r\n  //   if (direction === \"right\") {\r\n  //     rejectMovie(movie);\r\n  //   }\r\n  //   updateCurrentIndex(index - 1);\r\n  // };\r\n\r\n  // swipe left , right, top -> reject\r\n  const swiped = (direction, index, movie) => {\r\n    if (direction === \"down\") {\r\n      setShowSummary(false);\r\n      console.log(\"move accepted\")\r\n      // acceptMovie(movie);\r\n      return updateCurrentIndex(index - 1);\r\n    }\r\n    setShowSummary(false);\r\n    console.log(\"move rejected\")\r\n    // rejectMovie(movie);\r\n    updateCurrentIndex(index - 1);\r\n  };\r\n\r\n  const outOfFrame = (name, idx) => {\r\n    // console.log(`${name} (${idx}) left the screen!`, currentIndexRef.current);\r\n    currentIndexRef.current >= idx && childRefs[idx].current.restoreCard();\r\n  };\r\n\r\n  const swipe = async (dir) => {\r\n    if (canSwipe && currentIndex < database.length) {\r\n      setShowSummary(false);\r\n      await childRefs[currentIndex].current.swipe(dir); // Swipe the card!\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (currentIndexRef.current === -1) {\r\n      setShowButtons(false);\r\n    }\r\n  }, [currentIndexRef.current]);\r\n\r\n  return (\r\n    <Box\r\n      data-testid=\"movie-list\"\r\n\r\n      sx={{\r\n        display: \"grid\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          gridColumn: \"1\",\r\n          gridRow: \"1\",\r\n          borderRadius: \"20px\",\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            color: \"black\",\r\n            borderTopLeftRadius: \"20px\",\r\n            borderTopRightRadius: \"20px\",\r\n            padding: \"5px 0\",\r\n            textAlign: \"center\",\r\n            fontSize: `${desktopMedia ? \"3em\" : \"1.25em\"}`,\r\n            height: \"1.25em\",\r\n          }}\r\n        ></Box>\r\n        <Box\r\n          sx={{\r\n            position: \"relative\",\r\n            width: `${desktopMedia ? \"800px\" : \"600px\"}`,\r\n            padding: \"20px\",\r\n            maxWidth: \"85vw\",\r\n            height: \"35vh\",\r\n            borderRadius: \"20px\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            border: \"1px solid white\",\r\n            margin: \"0 auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            fontSize: `${desktopMedia ? \"3em\" : \"2em\"}`,\r\n          }}\r\n        >\r\n          {/* you can check your preferences by clicking on the icon in the upper left corner, have a nice session! */}\r\n          <Box>that's all for now</Box>\r\n          <SentimentVerySatisfied\r\n            style={{ fontSize: \"5rem \", color: \"yellowgreen\" }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {database.map((movie, index) => (\r\n        <TinderCard\r\n          id={`swipe-card-${index}`}\r\n          className=\"swipe\"\r\n          ref={childRefs[index]}\r\n          key={index}\r\n          onSwipe={(dir) => swiped(dir, index, movie)}\r\n          onCardLeftScreen={() => outOfFrame(movie.name, index)}\r\n          // preventSwipe={[\"up\", \"down\"]}\r\n        >\r\n          <Box\r\n          data-testid=\"movie-title\"\r\n            sx={{\r\n              color: \"black\",\r\n              borderTopLeftRadius: \"20px\",\r\n              borderTopRightRadius: \"20px\",\r\n              padding: \"5px 0\",\r\n              textAlign: \"center\",\r\n              fontSize: `${desktopMedia ? \"3em\" : \"1.25em\"}`,\r\n              height: \"1.25em\",\r\n            }}\r\n          >\r\n            {movie.name} ({movie.ratings}/10)\r\n          </Box>\r\n          <Box\r\n            data-testid=\"movie\"\r\n            sx={{\r\n              position: \"relative\",\r\n              width: `${desktopMedia ? \"800px\" : \"600px\"}`,\r\n              padding: \"20px\",\r\n              maxWidth: \"85vw\",\r\n              height: \"35vh\",\r\n              borderRadius: \"20px\",\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n              border: \"1px solid white\",\r\n              margin: \"0 auto\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              backgroundImage: `url(${movie.url}) `,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                alignItems: \"start\",\r\n              }}\r\n            >\r\n              <IconButton\r\n                style={{\r\n                  position: \"relative\",\r\n                  top: \"-25px\",\r\n                  left: \"-25px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                }}\r\n                onTouchStart={(e) => handleShowSumm(e)}\r\n                onClick={(e) => handleShowSumm(e)}\r\n              >\r\n                <Info\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: `${desktopMedia ? \"3rem\" : \"2rem\"}`,\r\n                  }}\r\n                />\r\n              </IconButton>\r\n            </Box>\r\n            {showSummary ? (\r\n              <Box\r\n                sx={{\r\n                  color: \"white\",\r\n                  borderRadius: \"10px\",\r\n                  padding: \"5px\",\r\n                  backgroundColor: \"#00000091\",\r\n                  fontSize: `${desktopMedia ? \"1rem\" : \"0.75rem\"}`,\r\n                }}\r\n              >\r\n                {movie.summary}\r\n              </Box>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Box>\r\n        </TinderCard>\r\n      ))}\r\n      {showButtons ? (\r\n        <Box\r\n          sx={{\r\n            position: \"relative\",\r\n            top: \"100%\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            gap: \"15vw\",\r\n            cursor: \"pointer\",\r\n            height: \"2rem\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            style={{ color: \"#76e2b3\" }}\r\n            // onClick={() => swipe(\"left\")}\r\n            onClick={() => swipe(\"down\")}\r\n          >\r\n            <Check fontSize=\"large\" />\r\n            Accept\r\n          </IconButton>\r\n          <IconButton\r\n          data-testid=\"reject-btn\"\r\n            style={{ color: \"#ec5e6f\" }}\r\n            onClick={() => swipe(\"right\")}\r\n          >\r\n            Reject\r\n            <Close fontSize=\"large\" />\r\n          </IconButton>\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","C:\\Users\\48604\\Desktop\\rekrutacja\\TinderForMovies\\client\\src\\data\\index.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"45","line":1,"column":53,"nodeType":"43","messageId":"44","endLine":1,"endColumn":60},{"ruleId":"41","severity":1,"message":"46","line":1,"column":62,"nodeType":"43","messageId":"44","endLine":1,"endColumn":71},{"ruleId":"41","severity":1,"message":"47","line":10,"column":16,"nodeType":"43","messageId":"44","endLine":10,"endColumn":27},{"ruleId":"41","severity":1,"message":"48","line":15,"column":16,"nodeType":"43","messageId":"44","endLine":15,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":38,"column":5,"nodeType":"51","endLine":38,"endColumn":7,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":89,"column":6,"nodeType":"51","endLine":89,"endColumn":31,"suggestions":"54"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'createRef' is defined but never used.","'acceptMovie' is defined but never used.","'rejectMovie' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'database.length'. Either include it or remove the dependency array.","ArrayExpression",["55"],"React Hook useEffect has an unnecessary dependency: 'currentIndexRef.current'. Either exclude it or remove the dependency array. Mutable values like 'currentIndexRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["56"],{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},"Update the dependencies array to be: [database.length]",{"range":"61","text":"62"},"Update the dependencies array to be: []",{"range":"63","text":"64"},[1464,1466],"[database.length]",[2890,2915],"[]"]